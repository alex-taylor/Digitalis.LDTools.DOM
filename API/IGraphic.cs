#region License

//
// IGraphic.cs
//
// Copyright (C) 2009-2013 Alex Taylor.  All Rights Reserved.
//
// This file is part of Digitalis.LDTools.DOM.dll
//
// Digitalis.LDTools.DOM.dll is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Digitalis.LDTools.DOM.dll is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Digitalis.LDTools.DOM.dll.  If not, see <http://www.gnu.org/licenses/>.
//

#endregion License

namespace Digitalis.LDTools.DOM.API
{
    #region Usings

    using System.Collections.Generic;

    using OpenTK;

    using Digitalis.UndoSystem;

    #endregion Usings

    /// <summary>
    /// Represents a graphical <see cref="IGroupable"/>.
    /// </summary>
    /// <remarks>
    ///
    /// <h3>Code-generation</h3>
    /// By default, if <i>codeFormat</i> is <see cref="CodeStandards.Full"/> or
    /// <see cref="CodeStandards.OfficialModelRepository"/>, <see cref="IDOMObject.ToCode">ToCode()</see> will prefix the code
    /// generated by the <b>IGraphic</b> with the <i>GHOST</i> and <i>MLCAD HIDE</i> meta-commands as required by
    /// <see cref="IsGhosted"/> and <see cref="IsVisible"/> and in accordance with the
    /// <see href="http://mlcad.lm-software.com/e_default.htm">MLCad specification</see>. Subtypes of <b>IGraphic</b> may
    /// override this behaviour.
    /// <p/>
    /// All other code-generation, including that for <see cref="ColourValue"/> and <see cref="Coordinates"/>, is
    /// implementation-specific.
    ///
    /// <h3>Geometry</h3>
    /// By default, <see cref="IGeometric.BoundingBox"/> returns the union of the members of <see cref="Coordinates"/>.
    /// Subtypes of <b>IGraphic</b> may override this behaviour. All other members of <see cref="IGeometric"/> are
    /// implementation-specific.
    ///
    /// <h3>Self-description</h3>
    /// <b>IGraphic</b> returns the following values:
    /// <p/>
    /// <list type="table">
    ///     <listheader><term>Property</term><description>Value</description></listheader>
    ///     <item><term><see cref="IDOMObject.ObjectType"/></term><description>Implementation-specific</description></item>
    ///     <item><term><see cref="IDOMObject.IsImmutable"/></term><description>Implementation-specific</description></item>
    ///     <item><term><see cref="IDocumentElement.Icon"/></term><description>Implementation-specific</description></item>
    ///     <item><term><see cref="IDocumentElement.TypeName"/></term><description>Implementation-specific</description></item>
    ///     <item><term><see cref="IDocumentElement.Description"/></term><description>Implementation-specific</description></item>
    ///     <item><term><see cref="IDocumentElement.ExtendedDescription"/></term><description>Implementation-specific</description></item>
    ///     <item><term><see cref="IElement.IsStateElement"/></term><description>Implementation-specific</description></item>
    ///     <item><term><see cref="IElement.IsTopLevelElement"/></term><description>Implementation-specific</description></item>
    ///     <item><term><see cref="CoordinatesCount"/></term><description>Implementation-specific</description></item>
    ///     <item><term><see cref="OverrideableColourValue"/></term><description>Implementation-specific</description></item>
    ///     <item><term><see cref="ColourValueEnabled"/></term><description>Implementation-specific</description></item>
    /// </list>
    ///
    /// </remarks>
    public interface IGraphic : IGroupable, IGeometric
    {
        #region Analytics

        /// <summary>
        /// Determines whether the <see cref="IGraphic"/> is a duplicate of a specified <see cref="IGraphic"/>.
        /// </summary>
        /// <param name="graphic">The <see cref="IGraphic"/> to compare against.</param>
        /// <returns><c>true</c> if the two <see cref="IGraphic"/>s are duplicates; otherwise, <c>false</c>.</returns>
        /// <remarks>
        /// What is considered to be a duplicate is defined by the
        /// <see href="http://www.ldraw.org/article/512.html#duplicates">LDraw specification</see>.
        /// <p/>
        /// Passing <c>this</c> for <paramref name="graphic"/> will return <c>false</c>.
        /// </remarks>
        bool IsDuplicateOf(IGraphic graphic);

        #endregion Analytics

        #region Attributes

        /// <summary>
        /// Gets or sets a value indicating whether the <see cref="IGraphic"/> is visible.
        /// </summary>
        /// <exception cref="System.ObjectDisposedException">The <see cref="IGraphic"/> is
        ///     <see cref="IDOMObject.IsDisposed">disposed</see>.</exception>
        /// <exception cref="ObjectFrozenException">The property is set and the <see cref="IGraphic"/> is
        ///     <see cref="IDOMObject.IsFrozen">frozen</see>.</exception>
        /// <exception cref="System.NotSupportedException">The property is set and the <see cref="IGraphic"/> is
        ///     <see cref="IDOMObject.IsImmutable">immutable</see>.</exception>
        /// <exception cref="ElementLockedException">The property is set and the <see cref="IGraphic"/> is
        ///     <see cref="IPageElement.IsLocked">locked</see>.</exception>
        /// <remarks>
        /// Raises the <see cref="IsVisibleChanged"/> event when its value changes.
        /// <p/>
        /// Default value is <c>true</c>.
        /// </remarks>
        bool IsVisible { get; set; }

        /// <summary>
        /// Occurs when <see cref="IsVisible"/> changes.
        /// </summary>
        event PropertyChangedEventHandler<bool> IsVisibleChanged;

        /// <summary>
        /// Gets or sets a value indicating whether the <see cref="IGraphic"/> is ghosted.
        /// </summary>
        /// <exception cref="System.ObjectDisposedException">The <see cref="IGraphic"/> is
        ///     <see cref="IDOMObject.IsDisposed">disposed</see>.</exception>
        /// <exception cref="ObjectFrozenException">The property is set and the <see cref="IGraphic"/> is
        ///     <see cref="IDOMObject.IsFrozen">frozen</see>.</exception>
        /// <exception cref="System.NotSupportedException">The property is set and the <see cref="IGraphic"/> is
        ///     <see cref="IDOMObject.IsImmutable">immutable</see>.</exception>
        /// <exception cref="ElementLockedException">The property is set and the <see cref="IGraphic"/> is
        ///     <see cref="IPageElement.IsLocked">locked</see>.</exception>
        /// <remarks>
        /// Raises the <see cref="IsGhostedChanged"/> event when its value changes.
        /// <p/>
        /// Default value is <c>false</c>.
        /// </remarks>
        bool IsGhosted { get; set; }

        /// <summary>
        /// Occurs when <see cref="IsGhosted"/> changes.
        /// </summary>
        event PropertyChangedEventHandler<bool> IsGhostedChanged;

        #endregion Attributes

        #region Colour

        /// <summary>
        /// Gets or sets the colour-value for the <see cref="IGraphic"/>.
        /// </summary>
        /// <exception cref="System.ObjectDisposedException">The <see cref="IGraphic"/> is
        ///     <see cref="IDOMObject.IsDisposed">disposed</see>.</exception>
        /// <exception cref="ObjectFrozenException">The property is set and the <see cref="IGraphic"/> is
        ///     <see cref="IDOMObject.IsFrozen">frozen</see>.</exception>
        /// <exception cref="System.NotSupportedException">The property is set and the <see cref="IGraphic"/> is
        ///     <see cref="IDOMObject.IsImmutable">immutable</see>.</exception>
        /// <exception cref="ElementLockedException">The property is set and the <see cref="IGraphic"/> is
        ///     <see cref="IPageElement.IsLocked">locked</see>.</exception>
        /// <remarks>
        /// The <b>ColourValue</b> of an <see cref="IGraphic"/> is one of:
        /// <p/>
        /// <list type="bullet">
        ///     <item>
        ///         <term>
        ///             The <see cref="IColour.Code"/> of an <see cref="IColour"/> from the
        ///             <see cref="Digitalis.LDTools.DOM.Palette.SystemPalette"/>
        ///         </term>
        ///     </item>
        ///     <item>
        ///         <term>
        ///             The <see cref="IColour.Code"/> of an <see cref="IColour"/> which precedes the <see cref="IGraphic"/>
        ///             in its containing <see cref="IPage"/>
        ///         </term>
        ///     </item>
        ///     <item><term>A <i>Direct Colours</i> value</term></item>
        /// </list>
        /// <p/>
        /// If <see cref="ColourValueEnabled"/> is <c>false</c>, setting this property has no effect and its return value is
        /// undefined.
        /// <p/>
        /// Raises the <see cref="ColourValueChanged"/> event when its value changes.
        /// <p/>
        /// Default value is <see cref="OverrideableColourValue"/>.
        /// </remarks>
        uint ColourValue { get; set; }

        /// <summary>
        /// Occurs when <see cref="ColourValue"/> changes.
        /// </summary>
        event PropertyChangedEventHandler<uint> ColourValueChanged;

        /// <summary>
        /// Gets an <see cref="IColour"/> which represents the colour in which the <see cref="IGraphic"/> should be rendered.
        /// </summary>
        /// <param name="overrideColour">The colour to use if <see cref="ColourValue"/> is equal to
        ///     <see cref="OverrideableColourValue"/>.</param>
        /// <returns>An <see cref="IColour"/>.</returns>
        /// <remarks>
        /// If the final colour-value is a <i>Direct Colours</i> value then a
        /// <see cref="IDOMObject.IsFrozen">frozen</see>&#160;<see cref="IColour"/> representing that value is returned.
        /// Otherwise, if the <see cref="IGraphic"/> is a member of an <see cref="IPage"/> this is searched for an
        /// <see cref="IColour"/> whose <see cref="IColour.Code"/> matches the colour-value and which precedes the
        /// <see cref="IGraphic"/> in the page. If none is found, the <see cref="Digitalis.LDTools.DOM.Palette.SystemPalette"/>
        /// is checked. If no suitable <see cref="IColour"/> can be found in either the page or the system-palette, the
        /// system-palette entry for <see cref="Digitalis.LDTools.DOM.Palette.MainColour"/> is returned.
        /// </remarks>
        IColour GetColour(uint overrideColour);

        #endregion Colour

        #region Coordinates

        /// <summary>
        /// Gets or sets the coordinates of the <see cref="IGraphic"/>.
        /// </summary>
        /// <exception cref="System.ObjectDisposedException">The <see cref="IGraphic"/> is
        ///     <see cref="IDOMObject.IsDisposed">disposed</see>.</exception>
        /// <exception cref="ObjectFrozenException">The property is set and the <see cref="IGraphic"/> is
        ///     <see cref="IDOMObject.IsFrozen">frozen</see>.</exception>
        /// <exception cref="System.NotSupportedException">The property is set and the <see cref="IGraphic"/> is
        ///     <see cref="IDOMObject.IsImmutable">immutable</see>.</exception>
        /// <exception cref="ElementLockedException">The property is set and the <see cref="IGraphic"/> is
        ///     <see cref="IPageElement.IsLocked">locked</see>.</exception>
        /// <exception cref="System.ArgumentException">The property is set and the number of values does not equal
        ///     <see cref="CoordinatesCount"/>.</exception>
        /// <remarks>
        /// Raises the <see cref="CoordinatesChanged"/> event when its value changes.
        /// <p/>
        /// Default value is a collection of <see cref="OpenTK.Vector3d"/>, of size <see cref="CoordinatesCount"/> and with each
        /// member set to <see cref="OpenTK.Vector3d.Zero"/>.
        /// </remarks>
        IEnumerable<Vector3d> Coordinates { get; set; }

        /// <summary>
        /// Occurs when <see cref="Coordinates"/> changes.
        /// </summary>
        event PropertyChangedEventHandler<IEnumerable<Vector3d>> CoordinatesChanged;

        #endregion Coordinates

        #region Self-description

        /// <summary>
        /// Gets the number of values in <see cref="Coordinates"/>.
        /// </summary>
        /// <remarks>
        /// As this value is a constant, it is safe to get when the <see cref="IGraphic"/> is
        /// <see cref="IDOMObject.IsDisposed">disposed</see>.
        /// </remarks>
        uint CoordinatesCount { get; }

        /// <summary>
        /// Gets the overrideable colour-value for the <see cref="IGraphic"/>.
        /// </summary>
        /// <remarks>
        /// The overrideable colour-value is the value which will be replaced by <i>overrideColour</i> when calling
        /// <see cref="GetColour">GetColour()</see> or <see cref="IDOMObject.ToCode">ToCode()</see>. It is normally either
        /// <see cref="Digitalis.LDTools.DOM.Palette.MainColour"/> or <see cref="Digitalis.LDTools.DOM.Palette.EdgeColour"/>.
        /// <p/>
        /// If <see cref="ColourValueEnabled"/> is <c>false</c> the value of this property is undefined.
        /// <p/>
        /// As this value is a constant, it is safe to get when the <see cref="IGraphic"/> is
        /// <see cref="IDOMObject.IsDisposed">disposed</see>.
        /// </remarks>
        uint OverrideableColourValue { get; }

        /// <summary>
        /// Gets a value indicating whether <see cref="ColourValue"/> is used by this <see cref="IGraphic"/>.
        /// </summary>
        /// <remarks>
        /// Not all implementations of <see cref="IGraphic"/> will make use of <see cref="ColourValue"/>, so this property
        /// should be checked before interpreting the returned colour.
        /// <p/>
        /// As this value is a constant, it is safe to get when the <see cref="IGraphic"/> is
        /// <see cref="IDOMObject.IsDisposed">disposed</see>.
        /// </remarks>
        bool ColourValueEnabled { get; }

        #endregion Self-description
    }
}
